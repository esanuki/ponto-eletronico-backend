// <auto-generated />
using System;
using Api.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Api.Data.Migrations
{
    [DbContext(typeof(PontoEletronicoContext))]
    [Migration("20211130031546_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Api.Domain.Models.Empresa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("EmpresaId");

                    b.Property<string>("Cnpj")
                        .HasColumnType("varchar(14)")
                        .HasColumnName("Cnpj");

                    b.Property<string>("Cpf")
                        .HasColumnType("varchar(11)")
                        .HasColumnName("Cpf");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(80)")
                        .HasColumnName("Nome");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("varchar(80)")
                        .HasColumnName("RazaoSocial");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Empresa");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b11d7795-972e-4877-95d5-c1a4523f550d"),
                            Cnpj = "03535011000164",
                            Cpf = "63992844064",
                            Nome = "Administrador",
                            RazaoSocial = "Empresa S/A",
                            UsuarioId = new Guid("8aa0f728-175c-4247-9455-175a91193b1f")
                        });
                });

            modelBuilder.Entity("Api.Domain.Models.Funcionario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FuncionarioId");

                    b.Property<string>("Cpf")
                        .HasColumnType("varchar(11)")
                        .HasColumnName("Cpf");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(80)")
                        .HasColumnName("Nome");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Funcionario");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fb78f983-7514-45b8-b3fc-f2b41fc480cb"),
                            Cpf = "53129582045",
                            EmpresaId = new Guid("b11d7795-972e-4877-95d5-c1a4523f550d"),
                            Nome = "Funcionario",
                            UsuarioId = new Guid("b60071fd-4352-42ff-b826-ac3dc8e86cb7")
                        });
                });

            modelBuilder.Entity("Api.Domain.Models.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UsuarioId");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Email");

                    b.Property<int>("Perfil")
                        .HasColumnType("int")
                        .HasColumnName("Perfil");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Senha");

                    b.HasKey("Id");

                    b.HasIndex("Email");

                    b.HasIndex("Senha");

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8aa0f728-175c-4247-9455-175a91193b1f"),
                            Email = "admin@empresa.com",
                            Perfil = 0,
                            Senha = "e10adc3949ba59abbe56e057f20f883e"
                        },
                        new
                        {
                            Id = new Guid("b60071fd-4352-42ff-b826-ac3dc8e86cb7"),
                            Email = "funcionario@empresa.com",
                            Perfil = 1,
                            Senha = "e10adc3949ba59abbe56e057f20f883e"
                        });
                });

            modelBuilder.Entity("Api.Domain.Models.Empresa", b =>
                {
                    b.HasOne("Api.Domain.Models.Usuario", "Usuario")
                        .WithMany("Empresas")
                        .HasForeignKey("UsuarioId")
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Api.Domain.Models.Funcionario", b =>
                {
                    b.HasOne("Api.Domain.Models.Empresa", "Empresa")
                        .WithMany("Funcionarios")
                        .HasForeignKey("EmpresaId")
                        .IsRequired();

                    b.HasOne("Api.Domain.Models.Usuario", "Usuario")
                        .WithMany("Funcionarios")
                        .HasForeignKey("UsuarioId")
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Api.Domain.Models.Empresa", b =>
                {
                    b.Navigation("Funcionarios");
                });

            modelBuilder.Entity("Api.Domain.Models.Usuario", b =>
                {
                    b.Navigation("Empresas");

                    b.Navigation("Funcionarios");
                });
#pragma warning restore 612, 618
        }
    }
}
